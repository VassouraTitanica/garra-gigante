{"ast":null,"code":"var _jsxFileName = \"S:\\\\- Anywhere\\\\Developing\\\\Academind\\\\React\\\\PurchasesList\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpenseItem from \"./ExpenseItem\";\nimport { useState } from 'react';\nimport ExpensesFilter from './ExpensesFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = itemProps => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2020');\n\n  // default 2020\n  let filterInfoText = '2019, 2021 & 2022';\n  if (filteredYear === '2019') {\n    filterInfoText = '2020, 2021 & 2022';\n  } else if (filteredYear === '2021') {\n    filterInfoText = '2019, 2020 & 2022';\n  } else {\n    filterInfoText = '2019, 2020 & 2021';\n  }\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Data for years \", filterInfoText, \" is hidden.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), itemProps.items.map((expense, index) => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        price: expense.price,\n        date: expense.date\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Expenses, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["Card","ExpenseItem","useState","ExpensesFilter","jsxDEV","_jsxDEV","Expenses","itemProps","_s","filteredYear","setFilteredYear","filterInfoText","filterChangeHandler","selectedYear","children","className","selected","onChangeFilter","fileName","_jsxFileName","lineNumber","columnNumber","items","map","expense","index","title","price","date","_c","$RefreshReg$"],"sources":["S:/- Anywhere/Developing/Academind/React/PurchasesList/src/components/Expenses/Expenses.js"],"sourcesContent":["import './Expenses.css'\r\n\r\nimport Card from '../UI/Card';\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport { useState } from 'react';\r\nimport ExpensesFilter from './ExpensesFilter';\r\n\r\nconst Expenses = (itemProps) => {\r\n    const [filteredYear, setFilteredYear] = useState('2020')\r\n\r\n    // default 2020\r\n    let filterInfoText = '2019, 2021 & 2022'\r\n\r\n    if (filteredYear === '2019') {\r\n        filterInfoText = '2020, 2021 & 2022'\r\n    } else if (filteredYear === '2021') {\r\n        filterInfoText = '2019, 2020 & 2022'\r\n    } else {\r\n        filterInfoText = '2019, 2020 & 2021'\r\n    }\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"expenses\">\r\n                <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n                {/* e.g. 2019, 2020, & 2022 */}\r\n                <p>Data for years {filterInfoText} is hidden.</p>\r\n                {/*\"itemProps.items\" replaces declaring a \"const expenses = itemProps.items\"*/}\r\n                {itemProps.items.map((expense, index) => (\r\n                    <ExpenseItem\r\n                        key={index}\r\n                        title={expense.title}\r\n                        price={expense.price}\r\n                        date={expense.date}\r\n                    />\r\n                ))}\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Expenses"],"mappings":";;AAAA,OAAO,gBAAgB;AAEvB,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC;;EAExD;EACA,IAAIS,cAAc,GAAG,mBAAmB;EAExC,IAAIF,YAAY,KAAK,MAAM,EAAE;IACzBE,cAAc,GAAG,mBAAmB;EACxC,CAAC,MAAM,IAAIF,YAAY,KAAK,MAAM,EAAE;IAChCE,cAAc,GAAG,mBAAmB;EACxC,CAAC,MAAM;IACHA,cAAc,GAAG,mBAAmB;EACxC;EAEA,MAAMC,mBAAmB,GAAIC,YAAY,IAAK;IAC1CH,eAAe,CAACG,YAAY,CAAC;EACjC,CAAC;EAED,oBACIR,OAAA;IAAAS,QAAA,eACIT,OAAA,CAACL,IAAI;MAACe,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACtBT,OAAA,CAACF,cAAc;QAACa,QAAQ,EAAEP,YAAa;QAACQ,cAAc,EAAEL;MAAoB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE/EhB,OAAA;QAAAS,QAAA,GAAG,iBAAe,EAACH,cAAc,EAAC,aAAW;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAEhDd,SAAS,CAACe,KAAK,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAChCpB,OAAA,CAACJ,WAAW;QAERyB,KAAK,EAAEF,OAAO,CAACE,KAAM;QACrBC,KAAK,EAAEH,OAAO,CAACG,KAAM;QACrBC,IAAI,EAAEJ,OAAO,CAACI;MAAK,GAHdH,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAb,EAAA,CApCKF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAsCd,eAAeA,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}