{"ast":null,"code":"var _jsxFileName = \"S:\\\\- Anywhere\\\\Developing\\\\Academind\\\\React\\\\PurchasesList\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport './Expenses.css';\nimport { useState } from 'react';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpenseItem from \"./ExpenseItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = itemProps => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2020');\n  const [filterInfoText, setFilterInfoText] = useState('2019, 2021, 2022');\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n    if (selectedYear === '2019') {\n      setFilterInfoText('2020, 2021, 2022');\n    } else if (selectedYear === '2020') {\n      setFilterInfoText('2019, 2021, 2022');\n    } else if (selectedYear === '2021') {\n      setFilterInfoText('2019, 2020, 2022');\n    } else {\n      setFilterInfoText('2019, 2020, 2021');\n    }\n  };\n\n  // function load() {\n  //     const filteredExpenses = itemProps.items.map((expense) => (\n  //         console.log(\"haha\", expense)\n  //     ))\n\n  // }\n\n  const whateverExpenses = [{\n    id: '12',\n    title: 'Eins eins',\n    year: '2020'\n  }];\n  const [expenses, setExpenses] = useState(whateverExpenses);\n  const filterExpensesByYear = yearToFilter => {\n    const filteredExpenses = whateverExpenses.filter(dummy => {\n      return dummy.year === yearToFilter;\n    });\n    setExpenses(filteredExpenses);\n  };\n\n  // filterExpensesByYear('2020')\n\n  // function fazer() {\n  //     console.log(\"he\")\n  // }\n\n  // fazer()\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Data for years \", filterInfoText, \" is hidden.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), itemProps.items.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem\n      // ultimately, in the absence of ID\n      // index could be used but it is strongly discouraged\n      , {\n        title: expense.title,\n        price: expense.price,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Expenses, \"jyE/Ih7wGCUC1cRhMP+2iwHjfbw=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["useState","Card","ExpensesFilter","ExpenseItem","jsxDEV","_jsxDEV","Expenses","itemProps","_s","filteredYear","setFilteredYear","filterInfoText","setFilterInfoText","filterChangeHandler","selectedYear","whateverExpenses","id","title","year","expenses","setExpenses","filterExpensesByYear","yearToFilter","filteredExpenses","filter","dummy","children","className","selected","onChangeFilter","fileName","_jsxFileName","lineNumber","columnNumber","items","map","expense","price","date","_c","$RefreshReg$"],"sources":["S:/- Anywhere/Developing/Academind/React/PurchasesList/src/components/Expenses/Expenses.js"],"sourcesContent":["import './Expenses.css'\r\nimport { useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst Expenses = (itemProps) => {\r\n    const [filteredYear, setFilteredYear] = useState('2020')\r\n    const [filterInfoText, setFilterInfoText] = useState('2019, 2021, 2022')\r\n\r\n    const filterChangeHandler = selectedYear => {\r\n        setFilteredYear(selectedYear)\r\n        if (selectedYear === '2019') {\r\n            setFilterInfoText('2020, 2021, 2022')\r\n        } else if (selectedYear === '2020') {\r\n            setFilterInfoText('2019, 2021, 2022')\r\n        } else if (selectedYear === '2021') {\r\n            setFilterInfoText('2019, 2020, 2022')\r\n        } else {\r\n            setFilterInfoText('2019, 2020, 2021')\r\n        }\r\n    }\r\n\r\n    // function load() {\r\n    //     const filteredExpenses = itemProps.items.map((expense) => (\r\n    //         console.log(\"haha\", expense)\r\n    //     ))\r\n    \r\n    // }\r\n\r\n    const whateverExpenses = [\r\n        { id: '12', title: 'Eins eins', year: '2020' }\r\n    ];\r\n\r\n    const [expenses, setExpenses] = useState(whateverExpenses);\r\n\r\n    const filterExpensesByYear = (yearToFilter) => {\r\n        const filteredExpenses = whateverExpenses.filter((dummy) => {\r\n            return dummy.year === yearToFilter\r\n        });\r\n        setExpenses(filteredExpenses);\r\n    }\r\n\r\n    // filterExpensesByYear('2020')\r\n\r\n    // function fazer() {\r\n    //     console.log(\"he\")\r\n    // }\r\n\r\n    // fazer()\r\n  \r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"expenses\">\r\n                <ExpensesFilter\r\n                    selected={filteredYear}\r\n                    onChangeFilter={filterChangeHandler}\r\n                />\r\n                {/* e.g. 2019, 2020, & 2022 */}\r\n                <p>Data for years {filterInfoText} is hidden.</p>\r\n                {/*\"itemProps.items\" replaces declaring a \"const expenses = itemProps.items\"*/}\r\n                {itemProps.items.map((expense) => (\r\n                    <ExpenseItem\r\n                        // ultimately, in the absence of ID\r\n                        // index could be used but it is strongly discouraged\r\n                        key={expense.id}\r\n                        title={expense.title}\r\n                        price={expense.price}\r\n                        date={expense.date}\r\n                    />\r\n                ))}\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Expenses"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EACxD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,kBAAkB,CAAC;EAExE,MAAMa,mBAAmB,GAAGC,YAAY,IAAI;IACxCJ,eAAe,CAACI,YAAY,CAAC;IAC7B,IAAIA,YAAY,KAAK,MAAM,EAAE;MACzBF,iBAAiB,CAAC,kBAAkB,CAAC;IACzC,CAAC,MAAM,IAAIE,YAAY,KAAK,MAAM,EAAE;MAChCF,iBAAiB,CAAC,kBAAkB,CAAC;IACzC,CAAC,MAAM,IAAIE,YAAY,KAAK,MAAM,EAAE;MAChCF,iBAAiB,CAAC,kBAAkB,CAAC;IACzC,CAAC,MAAM;MACHA,iBAAiB,CAAC,kBAAkB,CAAC;IACzC;EACJ,CAAC;;EAED;EACA;EACA;EACA;;EAEA;;EAEA,MAAMG,gBAAgB,GAAG,CACrB;IAAEC,EAAE,EAAE,IAAI;IAAEC,KAAK,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAO,CAAC,CACjD;EAED,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAACe,gBAAgB,CAAC;EAE1D,MAAMM,oBAAoB,GAAIC,YAAY,IAAK;IAC3C,MAAMC,gBAAgB,GAAGR,gBAAgB,CAACS,MAAM,CAAEC,KAAK,IAAK;MACxD,OAAOA,KAAK,CAACP,IAAI,KAAKI,YAAY;IACtC,CAAC,CAAC;IACFF,WAAW,CAACG,gBAAgB,CAAC;EACjC,CAAC;;EAED;;EAEA;EACA;EACA;;EAEA;;EAGA,oBACIlB,OAAA;IAAAqB,QAAA,eACIrB,OAAA,CAACJ,IAAI;MAAC0B,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACtBrB,OAAA,CAACH,cAAc;QACX0B,QAAQ,EAAEnB,YAAa;QACvBoB,cAAc,EAAEhB;MAAoB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eAEF5B,OAAA;QAAAqB,QAAA,GAAG,iBAAe,EAACf,cAAc,EAAC,aAAW;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAEhD1B,SAAS,CAAC2B,KAAK,CAACC,GAAG,CAAEC,OAAO,iBACzB/B,OAAA,CAACF;MACG;MACA;MAAA;QAEAc,KAAK,EAAEmB,OAAO,CAACnB,KAAM;QACrBoB,KAAK,EAAED,OAAO,CAACC,KAAM;QACrBC,IAAI,EAAEF,OAAO,CAACE;MAAK,GAHdF,OAAO,CAACpB,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIlB,CACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAzB,EAAA,CArEKF,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAuEd,eAAeA,QAAQ;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}