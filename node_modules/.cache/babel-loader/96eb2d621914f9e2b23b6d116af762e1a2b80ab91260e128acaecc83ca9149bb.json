{"ast":null,"code":"var _jsxFileName = \"S:\\\\- Anywhere\\\\Developing\\\\Academind\\\\React\\\\PurchasesList\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpenseItem from \"./ExpenseItem\";\nimport { useState } from 'react';\nimport ExpensesFilter from './ExpensesFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = itemProps => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2020');\n  const [filterInfoText, setFilterInfoText] = useState('2019, 2021, 2022');\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n    if (selectedYear === '2019') {\n      setFilterInfoText('2020, 2021, 2022');\n    } else if (selectedYear === '2020') {\n      setFilterInfoText('2019, 2021, 2022');\n    } else if (selectedYear === '2021') {\n      setFilterInfoText('2019, 2020, 2022');\n    } else {\n      setFilterInfoText('2019, 2020, 2021');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Data for years \", filterInfoText, \" is hidden.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), itemProps.items.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        price: expense.price,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Expenses, \"sa+nu+avICbPgEW28JlouS8Piic=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["Card","ExpenseItem","useState","ExpensesFilter","jsxDEV","_jsxDEV","Expenses","itemProps","_s","filteredYear","setFilteredYear","filterInfoText","setFilterInfoText","filterChangeHandler","selectedYear","children","className","selected","onChangeFilter","fileName","_jsxFileName","lineNumber","columnNumber","items","map","expense","title","price","date","id","_c","$RefreshReg$"],"sources":["S:/- Anywhere/Developing/Academind/React/PurchasesList/src/components/Expenses/Expenses.js"],"sourcesContent":["import './Expenses.css'\r\n\r\nimport Card from '../UI/Card';\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport { useState } from 'react';\r\nimport ExpensesFilter from './ExpensesFilter';\r\n\r\nconst Expenses = (itemProps) => {\r\n    const [filteredYear, setFilteredYear] = useState('2020')\r\n    const [filterInfoText, setFilterInfoText] = useState('2019, 2021, 2022')\r\n\r\n    const filterChangeHandler = selectedYear => {\r\n        setFilteredYear(selectedYear)\r\n        if (selectedYear === '2019') {\r\n            setFilterInfoText('2020, 2021, 2022')\r\n        } else if (selectedYear === '2020') {\r\n            setFilterInfoText('2019, 2021, 2022')\r\n        } else if (selectedYear === '2021') {\r\n            setFilterInfoText('2019, 2020, 2022')\r\n        } else {\r\n            setFilterInfoText('2019, 2020, 2021')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"expenses\">\r\n                <ExpensesFilter\r\n                    selected={filteredYear}\r\n                    onChangeFilter={filterChangeHandler}\r\n                />\r\n                {/* e.g. 2019, 2020, & 2022 */}\r\n                <p>Data for years {filterInfoText} is hidden.</p>\r\n                {/*\"itemProps.items\" replaces declaring a \"const expenses = itemProps.items\"*/}\r\n                {itemProps.items.map((expense) => (\r\n                    <ExpenseItem\r\n                        key={expense.id}\r\n                        title={expense.title}\r\n                        price={expense.price}\r\n                        date={expense.date}\r\n                    />\r\n                ))}\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Expenses"],"mappings":";;AAAA,OAAO,gBAAgB;AAEvB,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC;EACxD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,kBAAkB,CAAC;EAExE,MAAMW,mBAAmB,GAAGC,YAAY,IAAI;IACxCJ,eAAe,CAACI,YAAY,CAAC;IAC7B,IAAIA,YAAY,KAAK,MAAM,EAAE;MACzBF,iBAAiB,CAAC,kBAAkB,CAAC;IACzC,CAAC,MAAM,IAAIE,YAAY,KAAK,MAAM,EAAE;MAChCF,iBAAiB,CAAC,kBAAkB,CAAC;IACzC,CAAC,MAAM,IAAIE,YAAY,KAAK,MAAM,EAAE;MAChCF,iBAAiB,CAAC,kBAAkB,CAAC;IACzC,CAAC,MAAM;MACHA,iBAAiB,CAAC,kBAAkB,CAAC;IACzC;EACJ,CAAC;EAED,oBACIP,OAAA;IAAAU,QAAA,eACIV,OAAA,CAACL,IAAI;MAACgB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACtBV,OAAA,CAACF,cAAc;QACXc,QAAQ,EAAER,YAAa;QACvBS,cAAc,EAAEL;MAAoB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eAEFjB,OAAA;QAAAU,QAAA,GAAG,iBAAe,EAACJ,cAAc,EAAC,aAAW;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAEhDf,SAAS,CAACgB,KAAK,CAACC,GAAG,CAAEC,OAAO,iBACzBpB,OAAA,CAACJ,WAAW;QAERyB,KAAK,EAAED,OAAO,CAACC,KAAM;QACrBC,KAAK,EAAEF,OAAO,CAACE,KAAM;QACrBC,IAAI,EAAEH,OAAO,CAACG;MAAK,GAHdH,OAAO,CAACI,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIlB,CACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAd,EAAA,CAtCKF,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAwCd,eAAeA,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}