{"ast":null,"code":"var _jsxFileName = \"S:\\\\- Anywhere\\\\Developing\\\\Academind\\\\React\\\\PurchasesList\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport './Expenses.css';\nimport { useState } from 'react';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpenseItem from \"./ExpenseItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = itemProps => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2020');\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = itemProps.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem\n      // ultimately, in the absence of ID\n      // index could be used but it is strongly discouraged\n      , {\n        title: expense.title,\n        price: expense.price,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(Expenses, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["useState","Card","ExpensesFilter","ExpenseItem","jsxDEV","_jsxDEV","Expenses","itemProps","_s","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","children","className","selected","onChangeFilter","fileName","_jsxFileName","lineNumber","columnNumber","map","title","price","id","_c","$RefreshReg$"],"sources":["S:/- Anywhere/Developing/Academind/React/PurchasesList/src/components/Expenses/Expenses.js"],"sourcesContent":["import './Expenses.css'\r\nimport { useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst Expenses = (itemProps) => {\r\n    const [filteredYear, setFilteredYear] = useState('2020')\r\n\r\n    const filterChangeHandler = selectedYear => {\r\n        setFilteredYear(selectedYear)\r\n    }\r\n\r\n    const filteredExpenses = itemProps.items.filter((expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear\r\n    }))\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"expenses\">\r\n                <ExpensesFilter\r\n                    selected={filteredYear}\r\n                    onChangeFilter={filterChangeHandler}\r\n                />\r\n                {/*\"filteredExpenses\" replaces declaring a \"const expenses = itemProps.items\"*/}\r\n                {filteredExpenses.map((expense) => (\r\n                    <ExpenseItem\r\n                        // ultimately, in the absence of ID\r\n                        // index could be used but it is strongly discouraged\r\n                        key={expense.id}\r\n                        title={expense.title}\r\n                        price={expense.price}\r\n                        date={expense.date}\r\n                    />\r\n                ))}\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Expenses"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EAExD,MAAMW,mBAAmB,GAAGC,YAAY,IAAI;IACxCF,eAAe,CAACE,YAAY,CAAC;EACjC,CAAC;EAED,MAAMC,gBAAgB,GAAGN,SAAS,CAACO,KAAK,CAACC,MAAM,CAAEC,OAAO,IAAI;IACxD,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKV,YAAY;EACjE,CAAE,CAAC;EAEH,oBACIJ,OAAA;IAAAe,QAAA,eACIf,OAAA,CAACJ,IAAI;MAACoB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACtBf,OAAA,CAACH,cAAc;QACXoB,QAAQ,EAAEb,YAAa;QACvBc,cAAc,EAAEZ;MAAoB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,EAEDd,gBAAgB,CAACe,GAAG,CAAEZ,OAAO,iBAC1BX,OAAA,CAACF;MACG;MACA;MAAA;QAEA0B,KAAK,EAAEb,OAAO,CAACa,KAAM;QACrBC,KAAK,EAAEd,OAAO,CAACc,KAAM;QACrBb,IAAI,EAAED,OAAO,CAACC;MAAK,GAHdD,OAAO,CAACe,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIlB,CACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAnB,EAAA,CAhCKF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAkCd,eAAeA,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}